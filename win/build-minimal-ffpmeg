#!/bin/bash -eu

set -o pipefail

readonly FFMPEG_VERSION=${1:?}
readonly BUILD_DIR=${2:-$HOME/FFmpeg}
readonly OUTPUT_FILE=${3:-ffmpeg.exe}
readonly PROC_COUNT=$(grep -c '^processor' /proc/cpuinfo)


configure() {
  # TODO enable ALL audio decoders & demuxers
  ./configure --enable-gpl \
              --enable-version3 \
              --enable-nonfree \
              --enable-static \
              --disable-shared \
              --disable-autodetect \
              --disable-programs \
              --enable-ffmpeg \
              --disable-doc \
              --disable-everything \
              --enable-encoder=pcm_s16le \
              --enable-decoder=vorbis \
              --enable-decoder=opus \
              --enable-decoder=mp3 \
              --enable-decoder=aac \
              --enable-decoder=mpc \
              --enable-decoder=flac \
              --enable-decoder=wavpack \
              --enable-protocol=file \
              --enable-filter=ebur128 \
              --disable-debug
}

repo_dir=$BUILD_DIR/$FFMPEG_VERSION
if [ "$FFMPEG_VERSION" = "master" ]
then
  branch_name=master
else
  branch_name=release/$FFMPEG_VERSION
fi

if [ -d $repo_dir ]
then
  # repo dir already exists
  cd $repo_dir
  git fetch

  if [ "$(git rev-parse @)" != "$(git rev-parse origin/$branch_name)" ]
  then
    # update
    git pull
  fi

    # cleanup
    make clean || true
    make distclean || true

    # (re)configure
    configure

else
  # clone & set branch
  git clone https://git.ffmpeg.org/ffmpeg.git $repo_dir
  cd $repo_dir
  git checkout $branch_name

  # configure
  configure
fi

# build
make -j $PROC_COUNT

# test
$repo_dir/ffmpeg -hide_banner -nostats -i /tmp/*.ogg -i /tmp/*.opus -i /tmp/*.mp3 -i /tmp/*.m4a -filter_complex '[0]afifo[a1],[1]afifo[a2],[2]afifo[a3],[3]afifo[a4],[a1][a2][a3][a4]concat=n=4:v=0:a=1,ebur128=framelog=verbose:peak=true' -f null /dev/null
