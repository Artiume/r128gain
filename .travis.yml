dist: trusty
sudo: required
language: python
cache:
  pip: true
  directories:
    - $HOME/FFmpeg
    - $HOME/FFmpeg-win32
    - $HOME/FFmpeg-win64
    - $HOME/.cache/r128gain-build
    - $HOME/.cache/r128gain-test
    - $HOME/.cache/pypy
python:
  - "3.4"
  - "3.5"
  - "3.5-dev"
  - "3.6"
  - "3.6-dev"
  - "3.7-dev"
  - "pypy3"
env:
  global:
    - PYPY3_PYTHON_VERSION=3.5
    - PYPY3_VERSION=5.9-beta
    - PYPY3_SHA256=b0a79dabe2c48b0374d567936139ecf1379904a504d4a645be5c3e7e35140575
  matrix:
    - FFMPEG_VERSION=2.8
    - FFMPEG_VERSION=3.0
    - FFMPEG_VERSION=3.1
    - FFMPEG_VERSION=3.2
    - FFMPEG_VERSION=3.3
    - FFMPEG_VERSION=3.4
    - FFMPEG_VERSION=master
matrix:
  allow_failures:
    - python: "3.5-dev"
    - python: "3.6-dev"
    - python: "3.7-dev"
    - python: "pypy3"
  fast_finish: true
before_install:
  - "if [ $TRAVIS_PYTHON_VERSION = '3.4' -a $FFMPEG_VERSION = '3.4' ]; then WINDOWS=1; fi"
  - "if [ $WINDOWS -eq 1 ]; then curl https://dl.winehq.org/wine-builds/Release.key | sudo apt-key add - && sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/; fi"
  - "sudo apt-get -q update"
  - "sudo apt-get -V install yasm"
  - "./ci/install-ffmpeg $FFMPEG_VERSION"
  - "if [ $TRAVIS_PYTHON_VERSION != 'pypy3' ]; then pip install -U pip; fi"
  - "if [ $TRAVIS_PYTHON_VERSION = 'pypy3' ]; then mkdir -p ~/.cache/pypy && echo $PYPY3_SHA256  ~/.cache/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2 | sha256sum --status -c || curl -f -L https://bitbucket.org/squeaky/portable-pypy/downloads/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2 > ~/.cache/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2; fi"
  - "if [ $TRAVIS_PYTHON_VERSION = 'pypy3' ]; then echo $PYPY3_SHA256  ~/.cache/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2 | sha256sum --status -c && tar -xjf ~/.cache/pypy/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable.tar.bz2 -C ~ && deactivate && ~/pypy$PYPY3_PYTHON_VERSION-$PYPY3_VERSION-linux_x86_64-portable/bin/virtualenv-pypy ~/pypy3-venv && . ~/pypy3-venv/bin/activate; fi"
install:
  - "sudo apt-get -V install sox"
  - "pip install -r test-requirements.txt"
  - "pip install coveralls"
  - "if [ $WINDOWS -eq 1 ]; then sudo apt-get -V install winehq-stable p7zip-full mingw-w64; fi"
script:
  - "export PATH=$HOME/.local/bin:$PATH"
  - "export TEST_DL_CACHE_DIR=$HOME/.cache/r128gain-test"
  - "coverage run --source=r128gain setup.py test"
  - "if [ $WINDOWS -eq 1 ]; then pushd win && DOWNLOAD_DIR=$HOME/.cache/r128gain-build FFMPEG_VERSION=$FFMPEG_VERSION FFMPEG_CACHE_DIR=$HOME/FFmpeg-win32 WINEARCH=win32 make all test && popd; fi"
  - "if [ $WINDOWS -eq 1 ]; then pushd win && DOWNLOAD_DIR=$HOME/.cache/r128gain-build FFMPEG_VERSION=$FFMPEG_VERSION FFMPEG_CACHE_DIR=$HOME/FFmpeg-win64 WINEARCH=win64 make all test_freeze && popd; fi"
after_success:
  - "coveralls"
before_deploy:
  - "sudo apt-get -V install pandoc"
  - "pip install pypandoc"
  - "pip install restructuredtext_lint && t=$(mktemp --suffix=.rst) && pandoc README.md -o $t && rst-lint $t"
deploy:
  - provider: releases
    api_key:
      secure: "ZZ587O5uDqOJP7f6pfTfU6ApirlbkepqGc4kJMjiUdVGZgOFER9L/mqShEbBY0HJo27P/4vEFGxOlL92VYeJPzvnbco3di7Wn/xbLfMR8EYgCnQGQKf79pcCl4ABhJx2Us80Ay/3CR+B6QquHtq6Q7eXjjsmSFXDxBh5DkjI+PJZf/teY8JPNN9kMmJxTrJkSDt7InKGskUGTuIIk9dIUUBM2G0FNEBh40jVCcsMS8bvsjieWbwJDq8882cgv306PuPbeS3L0zeHHt+8oarmsCWsi2MnPk/TXdR6ca5Qe6mvf49herX+foVhaK6Fpppb7wVzUIOG4nSYZqAr9fn14pMAgTQ1auwMecxEX9RJekEvVOikEUEQcRU6YrZ4L7dDNdy7sX5dJkplvXlNjZj997IqS5sc5HaYl4GtPyQZGZ9Pn7TYpRhC/CKv7EdmQ15vPA1OkqmM+lYyVRQJUqG/DmKjfz+wmxOQ7bEAe+sqpkpV1iH2JW08VT9sf84cXrrvRlxDl7fbCBTQgHENYpm/QDxK8TK3d6LlRqRpg9sqIhPDm+4JZfRXNdUUTJbrxGJFP4iirAECN0LsAhAdh1CDiK8NWQYvnheIWaG/tvxlHG/4zVuzvZ4eMutyuduXZnSQe43vJraY5KMiwNDb1EKURgjjHUifROAk/+cs9xnewvs="
    file:
      - "win/r128gain_win32.zip"
      - "win/r128gain_win32.7z"
      - "win/r128gain_win32.exe"
      - "win/r128gain_win64.zip"
      - "win/r128gain_win64.7z"
      - "win/r128gain_win64.exe"
    skip_cleanup: true
    on:
      tags: true
      branch: master
      condition: "$WINDOWS -eq 1"
  - provider: pypi
    user: desbma
    password:
      secure: "ZQ0Ya1sySDwbK1ipCfl8todh4FXesT1qlwDr3yJGv23SfelIAgswVLMDb3+i51jbnRNqSkhelsw5GUt7/51v6y1VH5AKG2LkqQr9JLNA2UAXeP59IvgHdjjganZWbACFZM6h8zExYptsgdZFvlqaMP5JKKx0yo3nZEiPrIVt6xb96wnUcGMbEI/3fITZWRHcWzG0TDCG2HzwCo7DdSA3D9KGXKYEMGSMfmsnwqMPK86JP2Ue8IrU84sK7fbBvm+65Jwm+PIPKFodfFS+dgwkL2pvRjk7cUq719islUR6c4owXuV0c3fKwOPkiV0lGaCouWBiXqG1iWbQAxMDvog8QxbXSDqsQQV6ZRX8wCu9yXG72PJsqArz1niDp2cDP5Hg28ync2nenMFtTtxUBhU/KfP+nMuJLpo1f4OiWTAVWHdkg8jYAEJVwGT9wjGb6mi4HyvX29MtrtbU9qikBCCiKTw0B0Qm16gpu13nPd8xtEFcPz/DgOin2fSKrtr171M59sZC0+aG3e26grgo5I/LdNWqxjvbDPrBxUlbe3JjpLIKqY7a3GVy4wSXJ5Jlvv0YUscFBcARg3vLjynCj3QuhAfPButzoqfbs0H146WSTrFdzjjzy+aJwbehM3AwrJ4ia6ih9UayZu24j7LvYWWK7+3nDUl+uMUQ/cc16TdvsBM="
    on:
      tags: true
      branch: master
notifications:
  email:
    recipients:
      - secure: "cWAk38EBNf3noKvtowNOJdboJ/2X2Mieaf8OVMcOoxdXXD1CZ1iDSUFur6AIPBCh4l5jHrhxvMtIA5xrXYhAkVwlS72PdrclBEP+OQtHJ5NsvAcQDPTqnqAIFSnPInsJDqL9ROsl3TZINWYQVTcnodLIonYlk9X5xiGpFJ4rb7nkFMvKYCtIXeOgG4zwzZ7fMy7chGO1H1GWMr3PgQBiOGf2FJlD/P1VsH8aC7hhOx9hUUjkTm2YrZ/+HzTmR4WE4iGSXSj2HBO0yhV//R9B81vfmSX1lkxnl+w8rmdlYolx2f8O26+kAL9CZJS5CQPJbvW7wT+V/Fb8TUnw/ouP8rOWL95bPmDLtm7KO9Z1YXKzzsRueWolv7tnbOOgiuL/1MRzUvId2daE/3yrx/aPLj4RR8pOyTdDTWIchD8EicWsMuldqbU9fY0w6UYbt9fo7pNcKAvb9PCUjiHsThPMhogImqIXn7tkRjasCH9nby31WTlz2GhASg5VrbmIOeRnEYsVSzTKATBAkwSomw51mlFBmsjSHLtrHwbtVobyZrtqdXqK5yx/AfRguktEgpxSxi0bDGWNN97Qpme2vNh2GYxkupQ4IqFMFV/Xa8OeT8CkFhcCxg88oHhe6V7C/nQPtgeJgV3PXSlurysHkabGW+qP2ICXmxKLqizRb662Iqo="
    on_success: always
    on_failure: always
